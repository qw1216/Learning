
客户端和服务端通过交换各自的消息（与数据流正好相反）进行交互。由像浏览器这样的客户端发出的消息叫做 requests，被服务端响应的消息叫做 responses。
HTTP不仅被用来传输超文本文档，还用来传输图片、视频或者向服务器发送如HTML表单信息, HTTP还可以根据网页需求,仅获取部分Web文档内容更新网页
HTTP是一个client-server协议：请求通过一个实体被发出，实体也就是用户代理,大多数情况下，这个用户代理都是指浏览器
每一个发送到服务器的请求，都会被服务器处理并返回一个消息，也就是response
要展现一个网页，浏览器首先发送一个请求来获取页面的HTML文档，再解析文档中的资源信息发送其他请求，获取可执行脚本或CSS样式来进行页面布局渲染，以及一些其它页面资源（如图片和视频等）。然后，浏览器将这些资源整合到一起，展现出一个完整的文档，也就是网页。浏览器执行的脚本可以在之后的阶段获取更多资源，并相应地更新网页。
一个网页就是一个超文本文档。也就是说，有一部分显示的文本可能是链接，启动它（通常是鼠标的点击）就可以获取一个新的网页，使得用户可以控制客户端进行网上冲浪。浏览器来负责发送HTTP请求，并进一步解析HTTP返回的消息，以向用户提供明确的响应, 另一端是由Web Server来服务并提供客户端所请求的文档
在客户端（指浏览器）与服务器能够交互（客户端发起请求，服务器返回响应）
HTTP请求操作
一个HTTP的method，经常是由一个动词像GET, POST 或者一个名词像OPTIONS，HEAD来定义客户端的动作行为。通常客户端的操作都是获取资源（GET方法）或者发送HTML form表单值（POST方法），虽然在一些情况下也会有其他操作。
要获取的资源的路径，通常是上下文中就很明显的元素资源的URL
一个状态码（status code), 来告知对应请求执行成功或失败，以及失败的原因。
HTTP的APIs
 HTTP常用API是XMLHttpRequest ,可用于在user agent和服务器之间交换数据 
XMLHttpRequestXHR 对象用于与服务器交互。通过 XMLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。这允许网页在不影响用户操作的情况下，更新页面的局部内容。XMLHttpRequest 在 AJAX 编程中被大量使用 
一个检索请求的成功响应: 对于 GET请求，响应状态码为：200，则表示为成功。一个包含例如HTML文档，图片，或者文件的响应。
永久重定向: 响应状态码：301。
错误响应: 响应状态码：404 的一个页面。
不完全的响应: 响应状态码 206，只返回局部的信息。
除了 GET 请求外，如果匹配到作为一个已被定义的cache键名的响应。
HTTP理解
请求访问文本或图像资源的一端称为客户端，而提供资源响应的一端称为服务器端
在两台计算机之间使用HTTP协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。
HTTP协议规定，请求从客户端发出，最后服务器端响应该请求并返回。换句话说，肯定是先从客户端开始建立通信的，服务器端在没有接收到请求之前不会发送响应。
图片: https://uploader.shimo.im/f/1ZBrwP0LDEQqkm5p.jpg!thumbnail?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJhY2Nlc3NfcmVzb3VyY2UiLCJleHAiOjE2NDQ0MjIyNTAsImciOiJSZFhnZ1lLUlh4OTZKR1dxIiwiaWF0IjoxNjQ0NDIxOTUwLCJ1c2VySWQiOjU4MzY3OTY3fQ.ZhdtfYWbfCbS5voWBDysoIdYBQyDPTwomOERYKamzJQ
GET表示请求访问服务器的类型，称为方法（method）
随后的字符串/index.htm指明了请求访问的资源对象，也叫做请求URI（request-URI）
最后的HTTP/1.1，即HTTP的版本号，用来提示客户端使用的HTTP协议功能
这段请求内容的意思是：请求访问某台HTTP服务器上的/index.htm页面资源
HTTP协议自身不对请求和响应之间的通信状态进行保存,也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理
HTTP协议自身不具备保存之前发送过的请求或响应的功能
使用HTTP协议，每当有新的请求发送时，就会有对应的新响应产生
协议本身并不保留之前一切的请求或响应报文的信息
HTTP/1.1虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了Cookie技术。有了Cookie再用HTTP协议通信，就可以管理状态了
HTTP协议使用URI定位互联网上的资源,因为URI的特定功能,在互联网上任意位置的资源都能访问到
当客户端请求访问资源而发送请求时，URI需要将作为请求报文中的请求URI包含在内。指定请求URI的方式有很多
GET：获取资源 
GET方法用来请求访问已被URI识别的资源。指定的资源经服务器端解析后返回响应内容。也就是说，如果请求的资源是文本，那就保持原样返回
POST：传输实体主体, POST方法用来传输实体的主体。
虽然用GET方法也可以传输实体的主体，但一般不用GET方法进行传输，而是用POST方法。虽说POST的功能与GET很相似，但POST的主要目的并不是获取响应的主体内容。
HTTP是无状态协议，它不对之前发生过的请求和响应的状态进行管理。也就是说，无法根据之前的状态进行本次的请求处理
不可否认，无状态协议当然也有它的优点。由于不必保存状态，自然可减少服务器的CPU及内存资源的消耗
于是引入了Cookie技术。Cookie技术通过在请求和响应报文中写入Cookie信息来控制客户端的状态
Cookie会根据从服务器端发送的响应报文内的一个叫做Set-Cookie的首部字段信息，通知客户端保存Cookie。当下次客户端再往该服务器发送请求时，客户端会自动在请求报文中加入Cookie值后发送出去
HTTP报文
用于HTTP协议交互的信息被称为HTTP报文, 请求端（客户端）的HTTP报文叫做请求报文，响应端（服务器端）的叫做响应报文
请求报文和响应报文的首部内容由以下数据组成
请求行 / 包含用于请求的方法，请求URI和HTTP版本
状态行 / 包含表明响应结果的状态码
HTTP报文的主体用于传输请求或响应的实体主体
HTTP协议的请求和响应报文中必定包含HTTP首部,首部内容为客户端和服务器分别处理请求和响应提供所需要的信息,对于客户端用户来说，这些信息中的大部分内容无须亲自查看
HTTP请求报文在请求中, HTTP报文由方法、URI、HTTP版本、HTTP首部字段等部分构成
HTTP响应报文在响应中, HTTP报文由HTTP版本、状态码（数字和原因短语）、HTTP首部字段3部分构成
HTTP状态码
状态码告知从服务器端返回的请求结果
状态码的职责是当客户端向服务器端发送请求时，描述返回的请求结果。借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了错误
2XX的响应结果表明请求被正常处理了, 表示从客户端发来的请求在服务器端被正常处理了
204 No Content 该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。另外，也不允许返回任何实体的主体。比如，当从浏览器发出请求处理后，返回204响应，那么浏览器显示的页面不发生更新
3XX响应结果表明浏览器需要执行某些特殊的处理以正确处理请求
4XX的响应结果表明客户端是发生错误的原因所在
该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器会像200 OK一样对待该状态码
404该状态码表明服务器上无法找到请求的资源,也可以在服务器端拒绝请求# react-material
